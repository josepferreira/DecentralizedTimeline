Exception ignored in: <module 'threading' from '/usr/lib/python3.6/threading.py'>
Traceback (most recent call last):
  File "/usr/lib/python3.6/threading.py", line 1294, in _shutdown
    t.join()
  File "/usr/lib/python3.6/threading.py", line 1056, in join
    self._wait_for_tstate_lock()
  File "/usr/lib/python3.6/threading.py", line 1072, in _wait_for_tstate_lock
    elif lock.acquire(block, timeout):
KeyboardInterrupt
Task exception was never retrieved
future: <Task finished coro=<task() done, defined at User.py:52> exception=KeyboardInterrupt()>
Traceback (most recent call last):
  File "User.py", line 262, in main
    loop.run_forever()
  File "/usr/lib/python3.6/asyncio/base_events.py", line 427, in run_forever
    self._run_once()
  File "/usr/lib/python3.6/asyncio/base_events.py", line 1440, in _run_once
    handle._run()
  File "/usr/lib/python3.6/asyncio/events.py", line 145, in _run
    self._callback(*self._args)
  File "User.py", line 56, in task
    if not msg == '\n' and menu.run(int(msg)):
  File "/home/jose/Desktop/UM/4ยบ_Ano/2ยบ-Semestre/Sistemas-Distribuidos-em-Larga-Escala/TP/DecentralizedTimeline/P2P/Menu/Menu.py", line 23, in run
    return self.items[option-1].execute()
  File "/home/jose/Desktop/UM/4ยบ_Ano/2ยบ-Semestre/Sistemas-Distribuidos-em-Larga-Escala/TP/DecentralizedTimeline/P2P/Menu/Item.py", line 12, in execute
    return self.function()
  File "User.py", line 136, in mostra_timeline
    input('Press Enter')
KeyboardInterrupt
